{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##### Derivative Computation of the LiDAR scan data\n",
    "       By computing the derivative of the raw LiDAR data, the left edge and right edge of the landmarks (Cylinders) can be identified."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "from lego_robot import *\n",
    "from math import sin, cos\n",
    "\n",
    "# Find the derivative in scan data, ignoring invalid measurements.\n",
    "def compute_derivative(scan, min_dist):\n",
    "    jumps = [ 0 ]\n",
    "    for i in xrange(1, len(scan) - 1):\n",
    "        l = scan[i-1]\n",
    "        r = scan[i+1]\n",
    "        if l > min_dist and r > min_dist:\n",
    "            derivative = (r - l) / 2.0\n",
    "            jumps.append(derivative)\n",
    "        else:\n",
    "            jumps.append(0)\n",
    "    jumps.append(0)\n",
    "    return jumps"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##### Identification of Landmarks from the LiDAR scan data.\n",
    "    Alogorithm to find the landmarks (cylinders)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "def find_cylinders(scan, scan_derivative, jump, min_dist):\n",
    "    cylinder_list = []\n",
    "    on_cylinder = False\n",
    "    sum_ray, sum_depth, rays = 0.0, 0.0, 0\n",
    "\n",
    "    for i in xrange(len(scan_derivative)):\n",
    "\n",
    "        if (scan_derivative[i] < -jump):\n",
    "            on_cylinder = True\n",
    "            rays = 0\n",
    "            sum_ray = 0.0\n",
    "            sum_depth = 0\n",
    "    \n",
    "    \n",
    "        elif (scan_derivative[i] > jump and on_cylinder):\n",
    "            on_cylinder = False\n",
    "            rays += 1\n",
    "            sum_ray += i\n",
    "            sum_depth += scan[i]\n",
    "            cylinder_list.append((sum_ray/rays, sum_depth/rays))\n",
    "            \n",
    "                \n",
    "        if (on_cylinder and scan[i] > min_dist):\n",
    "            rays += 1\n",
    "            sum_ray += i\n",
    "            sum_depth += scan[i]\n",
    "\n",
    "    return cylinder_list"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##### Cartesian Coordinates\n",
    "    Converting the positions of the cylinder to cartesian coordinates in the robotics coordinate system"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "def compute_cartesian_coordinates(cylinders, cylinder_offset):\n",
    "    result = []\n",
    "    for c in cylinders:\n",
    "        beam_angle = LegoLogfile.beam_index_to_angle(c[0])\n",
    "        r = c[1] + cylinder_offset\n",
    "        result.append( (r*cos(beam_angle), r*sin(beam_angle)) ) # Replace this by your (x,y)\n",
    "    return result"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##### Plots\n",
    "    Example plots which show the derivative and the identification of the landmarks."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "def example_plot(scan_no):\n",
    "\n",
    "    \n",
    "    scan_to_plot = logfile.scan_data[scan_no]\n",
    "    der_to_plot = compute_derivative(scan_to_plot, minimum_valid_distance)\n",
    "    cyl_to_plot = cylinders = find_cylinders(scan_to_plot, der_to_plot, depth_jump,\n",
    "                                   minimum_valid_distance)\n",
    "    # Plot results.\n",
    "    plt.figure(0)\n",
    "    plt.title(\"Example derivative plot of scan %d\" % scan_no)\n",
    "    plt.plot(scan_to_plot)\n",
    "    plt.plot(der_to_plot)\n",
    "    plt.show()\n",
    "    \n",
    "    plt.figure(2)\n",
    "    plt.title(\"Found Cylinders in scan %d\"% scan_no)\n",
    "    plt.plot(scan_to_plot)\n",
    "    plt.scatter([c[0] for c in cylinders], [c[1] for c in cylinders],\n",
    "            c='r', s=200)\n",
    "    plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x87f4ba8>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x9d12668>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "if __name__ == '__main__':\n",
    "\n",
    "    minimum_valid_distance = 20.0\n",
    "    depth_jump = 100.0\n",
    "    cylinder_offset = 90.0\n",
    "\n",
    "    # Read the logfile which contains all scans.\n",
    "    logfile = LegoLogfile()\n",
    "    logfile.read(\"robot4_scan.txt\")\n",
    "    \n",
    "    # Pick one scan for an example plot\n",
    "    scan_no = 23\n",
    "    example_plot(scan_no)\n",
    "    \n",
    "    # Write a result file containing all cylinder records.\n",
    "    # Format is: D C x[in mm] y[in mm] ...\n",
    "    # With zero or more points.\n",
    "    # Note \"D C\" is also written for otherwise empty lines (no\n",
    "    # cylinders in scan)\n",
    "    out_file = file(\"cylinders.txt\", \"w\")\n",
    "    for scan in logfile.scan_data:\n",
    "        # Find cylinders.\n",
    "        der = compute_derivative(scan, minimum_valid_distance)\n",
    "        cylinders = find_cylinders(scan, der, depth_jump,\n",
    "                                   minimum_valid_distance)\n",
    "        cartesian_cylinders = compute_cartesian_coordinates(cylinders,\n",
    "                                                            cylinder_offset)\n",
    "        # Write to file.\n",
    "        out_file.write(\"D C \")\n",
    "        for c in cartesian_cylinders:\n",
    "            out_file.write(\"%.1f %.1f \" % c)\n",
    "        out_file.write(\"\\n\")\n",
    "    out_file.close()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 2",
   "language": "python",
   "name": "python2"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 2
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython2",
   "version": "2.7.14"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
